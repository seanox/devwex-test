<?xml version="1.0" ?>
<project name="devwex-test" default="compile" basedir="..">
  
  <property name="workspace" value="."/>
  <property name="workspace.resources" value="${workspace}/resources"/>  
  <property name="workspace.resources.libraries" value="${workspace.resources}/libraries"/>
  <property name="workspace.resources.program" value="${workspace.resources}/program"/>
  <property name="workspace.resources.certificates" value="${workspace.resources}/certificates"/>
  <property name="workspace.developing" value="${workspace}/developing"/>
  
  <property name="build" value="${workspace}/build"/>
  <property name="build.project" value="${build}/${ant.project.name}"/>
  
  <property name="release" value="${workspace}/release"/>
    
  <property name="releases" value="${workspace}/releases"/>
  
  <fileset id="fileset.project" dir="${workspace}">
    <include name=".settings/**/*"/>
    <include name="classes"/>
    <include name="developing/build.xml"/>
    <include name="developing/devwex.jar"/>
    <include name="developing/release.txt"/>
    <include name="libraries/*"/>
    <include name="test/**/*"/>
    <include name="resources/**/*"/>
    <include name="stage"/>
    <include name=".*"/>
  </fileset>
  
  <fileset id="fileset.project.extras" dir="${workspace}" defaultexcludes="false">
    <include name=".git/**/*"/>
    <include name=".*"/>
    <include name="*.md"/>
  </fileset>  
  
  <macrodef name="release-locate">
    <sequential>
      <copy file="${workspace.developing}/release.txt" tofile="${workspace.developing}/release.tmp" overwrite="true"/>
      <replaceregexp file="${workspace.developing}/release.tmp"
        match="(?s)^\s*([\d\.x]+) (\d{4})([\dx]+).*$" flags="g" byline="false"
        replace="release.version=\1&#x000D;release.year=\2&#x000D;release.date=\2\3&#x000D;"/>
      <replaceregexp file="${workspace.developing}/release.tmp" match="x+" replace="0000" flags="g" byline="false"/>
      <loadproperties>
        <file file="${workspace.developing}/release.tmp"/>
      </loadproperties>
      <delete file="${workspace.developing}/release.tmp"/>
    </sequential>
  </macrodef>  
  
  <target name="archive">
    <delete dir="${build}"/>
    <mkdir dir="${build}"/>
    <mkdir dir="${build.project}"/>
    <release-locate/>
    <copy todir="${build.project}">
      <fileset refid="fileset.project"/>
    </copy>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${build}"/>
    </touch>
    <delete file="${releases}/seanox-${ant.project.name}-${release.version}.zip"/>
    <zip destfile="${releases}/seanox-${ant.project.name}-${release.version}.zip"
      basedir="${build}" compress="true" filesonly="false" defaultexcludes="false"/>
    <touch datetime="${release.date}" pattern="yyyyMMdd"
      file="${releases}/seanox-${ant.project.name}-${release.version}.zip"/>
    <delete dir="${build}"/>
  </target>
  
  <scriptdef name="clean" language="javascript">
    <attribute name="dir"/>
    <element name="fileset" classname="org.apache.tools.ant.types.FileSet"/>
    <![CDATA[
      var basedir = new java.io.File(attributes.get("dir"));
      var excludes = new Array(String(basedir));
      var fileset = elements.get("fileset");
      fileset.forEach(function(fileset, index, array) {
        var iterator = fileset.iterator();
        while (iterator.hasNext()) {
          var file = iterator.next().getFile();
          excludes.push(String(file));
          while (file != null
              && String(file) != String(basedir)) {
            if (excludes.indexOf(String(file)) < 0)
              excludes.push(String(file));
            file = new java.io.File(file.getParent());
          }
        } 
      });
      var clear = function(file, excludes) {
        if (file.isFile()) {
          if (excludes.indexOf(String(file)) < 0)
            file.delete();
        } else if (file.isDirectory()) {
          var files = Array.prototype.slice.call(file.listFiles(), 0);
          files.forEach(function(file, index, array) {
            clear(file, excludes);
          });
          var keep = false;
          var deep = file;
          while (!keep
              && deep != null
              && String(deep) != String(basedir)) {
            keep = excludes.indexOf(String(deep)) >= 0;
            deep = new java.io.File(deep.getParent());  
          }
          keep = keep || String(file) == String(basedir);
          if (!keep)
           file.delete();
        }
      };
      clear(basedir, excludes);
    ]]>
  </scriptdef>
  
  <target name="clean">
    <clean dir="${basedir}">
      <fileset refid="fileset.project"/>
      <fileset refid="fileset.project.extras"/>
    </clean>
  </target>
    
  <target name="compile">
    <delete>
      <fileset dir="${workspace.resources.libraries}">
        <include name="**/*.class"/>
        <include name="**/*.jar"/>
      </fileset>
    </delete>    
    
    <javac srcdir="${workspace.resources.libraries}" destdir="${workspace.resources.libraries}"
      classpath="${workspace.developing}/devwex.jar"
      includeantruntime="false" debug="true"/>
    
    <jar destfile="${workspace.resources.libraries}/workerModule_A.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/WorkerModule_A*.class module/Abstract*Module*.class"/>
    <jar destfile="${workspace.resources.libraries}/workerModule_B.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/WorkerModule_B*.class module/Abstract*Module*.class"/> 
    <jar destfile="${workspace.resources.libraries}/workerModule_C.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/WorkerModule_C*.class module/Abstract*Module*.class"/>      
    <jar destfile="${workspace.resources.libraries}/workerModule_D.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/WorkerModule_D*.class module/Abstract*Module*.class"/>
    <jar destfile="${workspace.resources.libraries}/workerModule_E.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/WorkerModule_E*.class module/Abstract*Module*.class"/>
    <jar destfile="${workspace.resources.libraries}/workerModule_F.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/WorkerModule_B*.class module/Abstract*Module*.class"/>
    
    <jar destfile="${workspace.resources.libraries}/server-count_A.jar"
      basedir="${workspace.resources.libraries}"
      includes="com/seanox/devwex/Count*.class"/> 
    
    <jar destfile="${workspace.resources.libraries}/server-count_B.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Count*.class"/>     
    
    <jar destfile="${workspace.resources.libraries}/server-acceptance_01.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*01*.class"/> 
    <jar destfile="${workspace.resources.libraries}/server-acceptance_02.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*02*.class"/>     
    <jar destfile="${workspace.resources.libraries}/server-acceptance_03.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*03*.class"/> 
    <jar destfile="${workspace.resources.libraries}/server-acceptance_11.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*11*.class"/>     
    <jar destfile="${workspace.resources.libraries}/server-acceptance_12.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*12*.class"/>     
    <jar destfile="${workspace.resources.libraries}/server-acceptance_13.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*13*.class"/>
    <jar destfile="${workspace.resources.libraries}/server-acceptance_14.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*14*.class"/>     
    <jar destfile="${workspace.resources.libraries}/server-acceptance_15.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*15*.class"/>     
    <jar destfile="${workspace.resources.libraries}/server-acceptance_16.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*16*.class"/>
    <jar destfile="${workspace.resources.libraries}/server-acceptance_17.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*17*.class"/> 
    <jar destfile="${workspace.resources.libraries}/server-acceptance_18.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*18*.class"/>     
    <jar destfile="${workspace.resources.libraries}/server-acceptance_19.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*19*.class"/>     
    <jar destfile="${workspace.resources.libraries}/server-acceptance_20.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*20*.class"/>     
    <jar destfile="${workspace.resources.libraries}/server-acceptance_21.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*21*.class"/>     
    <jar destfile="${workspace.resources.libraries}/server-acceptance_22.jar"
      basedir="${workspace.resources.libraries}"
      includes="server/Acceptance*22*.class"/>
    
    <jar destfile="${workspace.resources.libraries}/module-acceptance_01.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*01.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_02.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*02.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_03.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*03.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_04.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*04.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_05.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*05.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_06.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*06.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_07.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*07.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_08.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*08.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_09.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*09.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_10.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*10.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_11.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*11.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_12.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*12.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_13.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*13.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_14.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*14.class"/>      
    <jar destfile="${workspace.resources.libraries}/module-acceptance_15.jar"
      basedir="${workspace.resources.libraries}"
      includes="module/Acceptance*15.class"/>      
    
    <jar destfile="${workspace.resources.libraries}/scripting.jar"
      basedir="${workspace.resources.libraries}"
      includes="extras/Scripting.class">
      <manifest>
        <attribute name="Main-Class" value="extras.Scripting"/>
      </manifest>      
    </jar>
    
    <delete>
      <fileset dir="${workspace.resources.libraries}">
        <include name="**/*.class"/>
      </fileset>
    </delete>     
  </target>
  
  <target name="keystore">
    <delete dir="${workspace.resources.certificates}"/>
    <mkdir dir="${workspace.resources.certificates}"/>
    
    <!-- Server: Ein Keystore fuer alles Keystore + Truststore -->
    <exec executable="keytool">
      <arg line="-genkeypair -alias Server -keyalg RSA -keysize 2048 -validity 365 -dname 'CN=Server'
        -keystore ${workspace.resources.certificates}/server.jks -keypass changeIt -storepass changeIt"/>
    </exec>    
    <exec executable="keytool">
      <arg line="-exportcert -alias Server -keystore ${workspace.resources.certificates}/server.jks -storepass changeIt
        -file ${workspace.resources.certificates}/server.cer"/>
    </exec>
    
    <!-- Client: A-C werden in den Server-Keystore eingetragen, X nicht -->
    <exec executable="keytool">
      <arg line="-genkeypair -alias ClientA -keyalg RSA -keysize 2048 -validity 365 -dname 'CN=ClientA,O=Seanox Software Solutions,C=TA'
        -keystore ${workspace.resources.certificates}/client.jks -keypass changeIt -storepass changeIt"/>
    </exec>
    <exec executable="keytool">
      <arg line="-exportcert -alias ClientA -keystore ${workspace.resources.certificates}/client.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_a.cer"/>
    </exec>  
    <exec executable="keytool">
      <arg line="-importcert -alias ClientA -keystore ${workspace.resources.certificates}/server.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_a.cer -noprompt"/>
    </exec>    

    <exec executable="keytool">
      <arg line="-genkeypair -alias ClientB -keyalg RSA -keysize 2048 -validity 365 -dname 'CN=ClientB,O=Seanox Software Solutions,C=TB'
        -keystore ${workspace.resources.certificates}/client.jks -keypass changeIt -storepass changeIt"/>
    </exec>
    <exec executable="keytool">
      <arg line="-exportcert -alias ClientB -keystore ${workspace.resources.certificates}/client.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_b.cer"/>
    </exec> 
    <exec executable="keytool">
      <arg line="-importcert -alias ClientB -keystore ${workspace.resources.certificates}/server.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_b.cer -noprompt"/>
    </exec>     
    
    <exec executable="keytool">
      <arg line="-genkeypair -alias ClientC -keyalg RSA -keysize 2048 -validity 365 -dname 'CN=ClientC,O=Seanox Software Solutions,C=TC'
        -keystore ${workspace.resources.certificates}/client.jks -keypass changeIt -storepass changeIt"/>
    </exec>
    <exec executable="keytool">
      <arg line="-exportcert -alias ClientC -keystore ${workspace.resources.certificates}/client.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_c.cer"/>
    </exec>  
    <exec executable="keytool">
      <arg line="-importcert -alias ClientC -keystore ${workspace.resources.certificates}/server.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_c.cer -noprompt"/>
    </exec>     
    
    <exec executable="keytool">
      <arg line="-genkeypair -alias ClientX -keyalg RSA -keysize 2048 -validity 365 -dname 'CN=ClientX,O=Seanox Software Solutions,C=TX'
        -keystore ${workspace.resources.certificates}/client.jks -keypass changeIt -storepass changeIt"/>
    </exec>    
    <exec executable="keytool">
      <arg line="-exportcert -alias ClientX -keystore ${workspace.resources.certificates}/client.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_x.cer"/>
    </exec>

    <!-- 
      Server- und Client-Keystore werden gegenseitig migriert.
      Somit wird nur der Server-Keystore benoetigt. 
    -->
    
    <exec executable="keytool">
      <arg line="-importcert -alias Server -keystore ${workspace.resources.certificates}/client.jks -storepass changeIt
        -file ${workspace.resources.certificates}/server.cer -noprompt"/>
    </exec>
    
    <exec executable="keytool">
      <arg line="-importkeystore -srckeystore ${workspace.resources.certificates}/server.jks -destkeystore ${workspace.resources.certificates}/server.p12
        -deststoretype PKCS12 -keypass changeIt -storepass changeIt -srcstorepass changeIt -noprompt"/>
    </exec>    

    <!-- 
      Export der Client- und Server-Zertifikate.
      Der Client/Browser muss den/die Client-Zertifikate installieren.
      Das Server-Zertifikat kann ignoriert werden.
    -->

    <exec executable="keytool">
      <arg line="-importkeystore -alias ClientA
        -srckeystore ${workspace.resources.certificates}/client.jks -srcstorepass changeIt
        -destkeystore ${workspace.resources.certificates}/client_a.p12 -deststoretype PKCS12 -keypass changeIt -storepass changeIt -noprompt"/>
    </exec> 
    <exec executable="keytool">
      <arg line="-importkeystore -alias ClientB
        -srckeystore ${workspace.resources.certificates}/client.jks -srcstorepass changeIt
        -destkeystore ${workspace.resources.certificates}/client_b.p12 -deststoretype PKCS12 -keypass changeIt -storepass changeIt -noprompt"/>
    </exec> 
    <exec executable="keytool">
      <arg line="-importkeystore -alias ClientC
        -srckeystore ${workspace.resources.certificates}/client.jks -srcstorepass changeIt
        -destkeystore ${workspace.resources.certificates}/client_c.p12 -deststoretype PKCS12 -keypass changeIt -storepass changeIt -noprompt"/>
    </exec> 
    <exec executable="keytool">
      <arg line="-importkeystore -alias ClientX
        -srckeystore ${workspace.resources.certificates}/client.jks -srcstorepass changeIt
        -destkeystore ${workspace.resources.certificates}/client_x.p12 -deststoretype PKCS12 -keypass changeIt -storepass changeIt -noprompt"/>
    </exec>
  </target>
</project>