<?xml version="1.0" ?>
<project name="devwex-test" default="compile" basedir="..">
  
  <property name="workspace" value="."/>
  <property name="workspace.resources" value="${workspace}/resources"/>  
  <property name="workspace.resources.libraries" value="${workspace.resources}/libraries"/>
  <property name="workspace.resources.program" value="${workspace.resources}/program"/>
  <property name="workspace.resources.certificates" value="${workspace.resources}/certificates"/>
  
  <target name="compile">
    <delete file="${workspace.resources.libraries}/ConnectorA.class"/>
    <delete file="${workspace.resources.libraries}/connectorA.jar"/>
    <javac srcdir="${workspace.resources.libraries}" destdir="${workspace.resources.libraries}"
      includeantruntime="false"/>
    <jar destfile="${workspace.resources.libraries}/connectorA.jar"
       basedir="${workspace.resources.libraries}"
       includes="ConnectorA.class"/>
    
    <delete file="${workspace.resources.libraries}/ConnectorB.class"/>
    <delete file="${workspace.resources.libraries}/connectorB.jar"/>
    <javac srcdir="${workspace.resources.libraries}" destdir="${workspace.resources.libraries}"
      includeantruntime="false"/>
    <jar destfile="${workspace.resources.libraries}/connectorB.jar"
       basedir="${workspace.resources.libraries}"
       includes="ConnectorB.class"/> 
    
    <delete file="${workspace.resources.libraries}/ConnectorC.class"/>
    <delete file="${workspace.resources.libraries}/connectorC.jar"/>
    <javac srcdir="${workspace.resources.libraries}" destdir="${workspace.resources.libraries}"
      includeantruntime="false"/>
    <jar destfile="${workspace.resources.libraries}/connectorC.jar"
       basedir="${workspace.resources.libraries}"
       includes="ConnectorC.class"/>      
    
    <delete file="${workspace.resources.libraries}/ConnectorD.class"/>
    <delete file="${workspace.resources.libraries}/connectorD.jar"/>
    <javac srcdir="${workspace.resources.libraries}" destdir="${workspace.resources.libraries}"
      includeantruntime="false"/>
    <jar destfile="${workspace.resources.libraries}/connectorD.jar"
       basedir="${workspace.resources.libraries}"
       includes="ConnectorD.class"/>

    <delete file="${workspace.resources.libraries}/ConnectorE.class"/>
    <delete file="${workspace.resources.libraries}/connectorE.jar"/>
    <javac srcdir="${workspace.resources.libraries}" destdir="${workspace.resources.libraries}"
      includeantruntime="false"/>
    <jar destfile="${workspace.resources.libraries}/connectorE.jar"
       basedir="${workspace.resources.libraries}"
       includes="ConnectorE.class"/>
    
    <delete file="${workspace.resources.libraries}/ConnectorF.class"/>
    <delete file="${workspace.resources.libraries}/connectorF.jar"/>
    <javac srcdir="${workspace.resources.libraries}" destdir="${workspace.resources.libraries}"
      includeantruntime="false"/>
    <jar destfile="${workspace.resources.libraries}/connectorF.jar"
       basedir="${workspace.resources.libraries}"
       includes="ConnectorF.class"/>    
    
    <delete file="${workspace.resources.libraries}/Scripting.class"/>
    <delete file="${workspace.resources.libraries}/scripting.jar"/>
    <javac srcdir="${workspace.resources.libraries}" destdir="${workspace.resources.libraries}"
      includeantruntime="false"/>
    <jar destfile="${workspace.resources.libraries}/scripting.jar"
       basedir="${workspace.resources.libraries}"
       includes="Scripting.class">
       <manifest>
         <attribute name="Main-Class" value="Scripting"/>
       </manifest>      
    </jar>
    
    <delete file="${workspace.resources.libraries}/ConnectorA.class"/>
    <delete file="${workspace.resources.libraries}/ConnectorB.class"/>
    <delete file="${workspace.resources.libraries}/ConnectorC.class"/>
    <delete file="${workspace.resources.libraries}/ConnectorD.class"/>    
    <delete file="${workspace.resources.libraries}/ConnectorE.class"/>
    <delete file="${workspace.resources.libraries}/ConnectorF.class"/>
    <delete file="${workspace.resources.libraries}/Scripting.class"/>
  </target>
  
  <target name="keystore">
    <delete dir="${workspace.resources.certificates}"/>
    <mkdir dir="${workspace.resources.certificates}"/>
    
    <!-- Server: Ein Keystore fuer alles Keystore + Truststore -->
    <exec executable="keytool">
      <arg line="-genkeypair -alias Server -keyalg RSA -keysize 2048 -validity 365 -dname 'CN=Server'
        -keystore ${workspace.resources.certificates}/server.jks -keypass changeIt -storepass changeIt"/>
    </exec>    
    <exec executable="keytool">
      <arg line="-exportcert -alias Server -keystore ${workspace.resources.certificates}/server.jks -storepass changeIt
        -file ${workspace.resources.certificates}/server.cer"/>
    </exec>
    
    <!-- Client: A-C werden in den Server-Keystore eingetragen, X nicht -->
    <exec executable="keytool">
      <arg line="-genkeypair -alias ClientA -keyalg RSA -keysize 2048 -validity 365 -dname 'CN=ClientA,O=Seanox Software Solutions,C=TA'
        -keystore ${workspace.resources.certificates}/client.jks -keypass changeIt -storepass changeIt"/>
    </exec>
    <exec executable="keytool">
      <arg line="-exportcert -alias ClientA -keystore ${workspace.resources.certificates}/client.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_a.cer"/>
    </exec>  
    <exec executable="keytool">
      <arg line="-importcert -alias ClientA -keystore ${workspace.resources.certificates}/server.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_a.cer -noprompt"/>
    </exec>    

    <exec executable="keytool">
      <arg line="-genkeypair -alias ClientB -keyalg RSA -keysize 2048 -validity 365 -dname 'CN=ClientB,O=Seanox Software Solutions,C=TB'
        -keystore ${workspace.resources.certificates}/client.jks -keypass changeIt -storepass changeIt"/>
    </exec>
    <exec executable="keytool">
      <arg line="-exportcert -alias ClientB -keystore ${workspace.resources.certificates}/client.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_b.cer"/>
    </exec> 
    <exec executable="keytool">
      <arg line="-importcert -alias ClientB -keystore ${workspace.resources.certificates}/server.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_b.cer -noprompt"/>
    </exec>     
    
    <exec executable="keytool">
      <arg line="-genkeypair -alias ClientC -keyalg RSA -keysize 2048 -validity 365 -dname 'CN=ClientC,O=Seanox Software Solutions,C=TC'
        -keystore ${workspace.resources.certificates}/client.jks -keypass changeIt -storepass changeIt"/>
    </exec>
    <exec executable="keytool">
      <arg line="-exportcert -alias ClientC -keystore ${workspace.resources.certificates}/client.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_c.cer"/>
    </exec>  
    <exec executable="keytool">
      <arg line="-importcert -alias ClientC -keystore ${workspace.resources.certificates}/server.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_c.cer -noprompt"/>
    </exec>     
    
    <exec executable="keytool">
      <arg line="-genkeypair -alias ClientX -keyalg RSA -keysize 2048 -validity 365 -dname 'CN=ClientX,O=Seanox Software Solutions,C=TX'
        -keystore ${workspace.resources.certificates}/client.jks -keypass changeIt -storepass changeIt"/>
    </exec>    
    <exec executable="keytool">
      <arg line="-exportcert -alias ClientX -keystore ${workspace.resources.certificates}/client.jks -storepass changeIt
        -file ${workspace.resources.certificates}/client_x.cer"/>
    </exec>

    <!-- 
      Server- und Client-Keystore werden gegenseitig migriert.
      Somit wird nur der Server-Keystore benoetigt. 
    -->
    
    <exec executable="keytool">
      <arg line="-importcert -alias Server -keystore ${workspace.resources.certificates}/client.jks -storepass changeIt
        -file ${workspace.resources.certificates}/server.cer -noprompt"/>
    </exec>
    
    <exec executable="keytool">
      <arg line="-importkeystore -srckeystore ${workspace.resources.certificates}/server.jks -destkeystore ${workspace.resources.certificates}/server.p12
        -deststoretype PKCS12 -keypass changeIt -storepass changeIt -srcstorepass changeIt -noprompt"/>
    </exec>    

    <!-- 
      Export der Client- und Server-Zertifikate.
      Der Client/Browser muss den/die Client-Zertifikate installieren.
      Das Server-Zertifikat kann ignoriert werden.
    -->

    <exec executable="keytool">
      <arg line="-importkeystore -alias ClientA
        -srckeystore ${workspace.resources.certificates}/client.jks -srcstorepass changeIt
        -destkeystore ${workspace.resources.certificates}/client_a.p12 -deststoretype PKCS12 -keypass changeIt -storepass changeIt -noprompt"/>
    </exec> 
    <exec executable="keytool">
      <arg line="-importkeystore -alias ClientB
        -srckeystore ${workspace.resources.certificates}/client.jks -srcstorepass changeIt
        -destkeystore ${workspace.resources.certificates}/client_b.p12 -deststoretype PKCS12 -keypass changeIt -storepass changeIt -noprompt"/>
    </exec> 
    <exec executable="keytool">
      <arg line="-importkeystore -alias ClientC
        -srckeystore ${workspace.resources.certificates}/client.jks -srcstorepass changeIt
        -destkeystore ${workspace.resources.certificates}/client_c.p12 -deststoretype PKCS12 -keypass changeIt -storepass changeIt -noprompt"/>
    </exec> 
    <exec executable="keytool">
      <arg line="-importkeystore -alias ClientX
        -srckeystore ${workspace.resources.certificates}/client.jks -srcstorepass changeIt
        -destkeystore ${workspace.resources.certificates}/client_x.p12 -deststoretype PKCS12 -keypass changeIt -storepass changeIt -noprompt"/>
    </exec>
  </target>   
</project>